import { Processor } from '../lib/processor';
import type { HandlerContext } from '@corva/node-sdk';
import { NormalizedStreamLambdaEvent } from '@corva/node-sdk/lib/lambdas/interfaces';

test('process event', async () => {
  const fakeLogger = console as unknown as HandlerContext['logger'];
  const fakeApiClient = {} as unknown as HandlerContext['api'];

  const processor = new Processor(fakeApiClient, fakeLogger);

  const event = {
    asset_id: 1234,
    app_stream_id: 2345,
    records: [
      {
        company_id: 1,
        asset_id: 1234,
        timestamp: 157829400,
        data: { hole_depth: 1000 },
      },
      {
        company_id: 1,
        asset_id: 1234,
        timestamp: 157829401,
        data: { hole_depth: 1001 },
      },
      {
        company_id: 1,
        asset_id: 1234,
        timestamp: 157829402,
        data: { hole_depth: 1001 },
      },
      {
        company_id: 1,
        asset_id: 1234,
        timestamp: 157829403,
        data: { hole_depth: 1001.5 },
      },
    ],
  } as unknown as NormalizedStreamLambdaEvent<unknown>;

  await processor.process(event);
});
