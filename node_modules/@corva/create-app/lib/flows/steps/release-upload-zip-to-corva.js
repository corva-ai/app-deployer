const { RELEASE } = require('../../constants/messages');
const axios = require('axios');
const FormData = require('form-data');
const { resolve } = require('path');
const { createReadStream } = require('fs');
const { StepError } = require('../lib/step-error');
const { get } = require('lodash/fp');

const UPLOAD_ZIP_TO_CORVA_STEP = {
  message: RELEASE.uploadApp,
  fn: async ({ zipFileName, appKey, CORVA_API_ENV, AUTH_TOKEN, dirName }) => {
    const form = new FormData();

    form.append('package', createReadStream(resolve(dirName, zipFileName)), 'archive.zip');

    const baseURL = `https://api${
      CORVA_API_ENV === 'production' ? '' : `.${CORVA_API_ENV}`
    }.corva.ai`;
    const uploadURL = `${baseURL}/v2/apps/${appKey}/packages/upload`;

    await axios
      .post(uploadURL, form, {
        headers: { ...form.getHeaders(), Authorization: `Bearer ${AUTH_TOKEN}` },
      })
      .catch((e) => {
        throw new StepError(
          `${get('response.data.message', e) || ''} \nPOST: ${uploadURL} failed.`,
          { cause: e }
        );
      });
  },
};

module.exports = { UPLOAD_ZIP_TO_CORVA_STEP };
