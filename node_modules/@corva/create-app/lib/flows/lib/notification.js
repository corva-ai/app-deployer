import chalk from 'chalk';
import terminalLink from 'terminal-link';

import { logger } from '../../helpers/logger.js';

/**
 * Console notification
 *
 */
export class Notification {
  #prefixUrl;

  constructor(envName) {
    this.#prefixUrl = `https://app${envName === 'production' ? '.' : `.${envName}.`}corva.ai`;
  }

  /**
   * Create link
   *
   * @private
   *
   * @param {string} title
   * @param {string} url
   *
   * @returns  {string}
   */
  _createLink(title, url) {
    return this._addLinkDecoration(terminalLink(title, url));
  }

  /**
   * Print to console line break
   *
   * @public
   *
   * @returns  {void}
   */
  printLineBreak() {
    logger.write('\n');
  }

  /**
   * Print to console text
   *
   * @public
   *
   * @param {string} text
   *
   * @returns  {void}
   */
  print(text) {
    this.printLineBreak();
    logger.write(text);
  }

  /**
   * Add a link styles
   *
   * @private
   *
   * @param {string} context
   *
   * @returns  {string}
   */
  _addLinkDecoration(context) {
    return chalk.blue.underline(context);
  }

  /**
   * Add an error styles
   *
   * @private
   *
   * @param {string} context
   *
   * @returns  {string}
   */
  _addErrorDecoration(context) {
    return chalk.red.bold(context);
  }

  /**
   * Get stream link
   *
   * @public
   *
   * @param {string} title
   * @param {string} streamId
   *
   * @returns  {string}
   */
  getStreamLink(title, streamId) {
    const streamUrl = `${this.#prefixUrl}/config/streams/${streamId}`;
    return this._createLink(title, streamUrl);
  }

  /**
   * Print stream link
   *
   * @public
   *
   * @param {string} title
   * @param {string} streamId
   *
   * @returns  {avoid}
   */
  printStreamLink(title, streamId) {
    const link = this.getStreamLink(title, streamId);
    this.print(link);
  }

  /**
   * Get asset link
   *
   * @public
   *
   * @param {string} title
   * @param {string} assetId
   *
   * @returns  {string}
   */
  getAssetLink(title, assetId) {
    const assetUrl = `${this.#prefixUrl}/assets/${assetId}`;
    return this._createLink(title, assetUrl);
  }

  /**
   * Print an error
   *
   * @public
   *
   * @param {string} error
   *
   * @returns  {void}
   */
  printError(error) {
    this.print(this._addErrorDecoration(error));
  }
}
