import chalk from 'chalk';
import { resolve, sep } from 'node:path';
import { SUCCESS_ICON } from './constants/messages.js';
import { logger } from './helpers/logger.js';

import debugFn from 'debug';

const debug = debugFn('cca:flow');

export const runFlow = async (flow, context, indent = '') => {
  logger.write(
    `${indent}Running ${chalk.cyan(flow.name)} in ${chalk.cyan(resolve(context.dirName).split(sep).pop())}\n`,
  );

  context.progress = () => logger.write('.');

  const result = await runSteps(flow.steps, context, indent + '  ');

  logger.write(`${indent}Done!` + SUCCESS_ICON);

  return result;
};

const runSteps = async (steps = [], context = {}, indent = '') => {
  for (const step of steps) {
    if (step.name) {
      const result = await runFlow(step, context, indent);

      Object.assign(context, result);

      continue;
    }

    const message = indent + step.message;

    logger.write(message);
    debug('Context: %o', context);

    const result = await step.fn(context);

    Object.assign(context, result);

    logger.write(SUCCESS_ICON);
  }

  return context;
};
