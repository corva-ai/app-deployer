const uiDependencies = {
  '@corva/ui': 'latest',
  '@material-ui/core': '4.11.2',
  '@material-ui/icons': '4.9.1',
  '@material-ui/lab': '4.0.0-alpha.57',
  '@material-ui/pickers': '3.2.10',
  'classnames': '2.2.6',
  'corva-convert-units': '1.10.17',
  'highcharts': '8.1.2',
  'highcharts-react-official': '2.2.2',
  'lodash': '^4.17.4',
  'mapbox.js': '3.2.1',
  'moment': '2.23.0',
  'moment-timezone': '0.5.23',
  'prop-types': '^15.6.1',
  'react': '17.0.1',
  'react-dom': '17.0.1',
}

const jsUiDevDependencies = {
  'postcss-loader': '4.1.0',
}

const tsUiDevDependencies = {
  ...jsUiDevDependencies,
  '@tsconfig/create-react-app': '1.0.2',
  '@types/material-ui': '0.21.9',
  '@types/react': '^17.0.22',
  '@types/react-dom': '^17.0.9',
  '@typescript-eslint/eslint-plugin': '^4.31.2',
  '@typescript-eslint/parser': '^4.31.2',
  'ts-loader': '8.2.0',
  'typescript': '^4.4.3',
};

const uiScripts = {
  build: 'webpack --config=./config-overrides.js --mode production',
  start: 'webpack-dev-server --config=./config-overrides.js --open --mode development',
  zip: 'create-corva-app zip .',
  lint: 'eslint --cache ./src/',
  release: 'create-corva-app release .',
};

const uiPackage = {
  version: '0.0.1',
  main: 'src/index.js',
  scripts: uiScripts,
  dependencies: uiDependencies,
  devDependencies: jsUiDevDependencies
}

const tsUiPackage = {
  ...uiPackage,
  devDependencies: tsUiDevDependencies
}

const nodeNpmScripts = {
  "bundle": "create-corva-app zip .",
  "test": "npm audit --production && npm run unit",
  "unit": "jest --passWithNoTests"
};

const nodeDependencies = {
  "@corva/node-sdk": "^6.2.0"
}

const nodeDevDependencies = {
  "jest": "^27.5.1"
}

const nodeTsDevDependencies = {
  "@types/jest": "^27.4.1",
  "jest": "^27.5.1",
  "ts-jest": "^27.1.4",
  "typescript": "^4.6.3"
}

const nodeYarnScripts = {
  ...nodeNpmScripts,
  "test": "yarn audit --groups dependencies && yarn unit",
}

const nodeTsScripts = {
  ...nodeNpmScripts,
  "build": "tsc -p tsconfig.build.json",
}

const nodeTsYarnScripts = {
  ...nodeYarnScripts,
  "build": "tsc -p tsconfig.build.json",
}

const nodeNpmPackage = {
  version: '0.0.1',
  main: 'index.js',
  private: true,
  dependencies: nodeDependencies,
  devDependencies: nodeDevDependencies,
  scripts: nodeNpmScripts
}

const nodeYarnPackage = {
  ...nodeNpmPackage,
  scripts: nodeYarnScripts
}

const nodeTsNpmPackage = {
  ...nodeNpmPackage,
  devDependencies: nodeTsDevDependencies,
  scripts: nodeTsScripts
}

const nodeTsYarnPackage = {
  ...nodeTsNpmPackage,
  scripts: nodeTsYarnScripts
}

const extendWithTsConfig = (package, version) => {
  package.devDependencies = {
    [`@tsconfig/node${version}`]: `^${version === '12' ? '1.0.9' : '1.0.1'}`,
    ...package.devDependencies,
  };

  return package;
}

const defaults = {
  javascript: {
    yarn: {
      ui: () => uiPackage,
      task: () => nodeYarnPackage,
      scheduler: () => nodeYarnPackage,
      stream: () => nodeYarnPackage
    },
    npm: {
      ui: () => uiPackage,
      task: () => nodeNpmPackage,
      scheduler: () => nodeNpmPackage,
      stream: () => nodeNpmPackage
    },
  },
  typescript: {
    yarn: {
      ui: () => tsUiPackage,
      task: ({ version }) => extendWithTsConfig(nodeTsYarnPackage, version),
      scheduler: ({ version }) => extendWithTsConfig(nodeTsYarnPackage, version),
      stream: ({ version }) => extendWithTsConfig(nodeTsYarnPackage, version)
    },
    npm: {
      ui: () => tsUiPackage,
      task: ({ version }) => extendWithTsConfig(nodeTsNpmPackage, version),
      scheduler: ({ version }) => extendWithTsConfig(nodeTsNpmPackage, version),
      stream: ({ version }) => extendWithTsConfig(nodeTsNpmPackage, version)
    }
  }
};

module.exports = {
  getDefaultsForPackageJson: (manifest, runtime) => {
    return defaults[runtime.language][runtime.packageManager][manifest.type](runtime);
  }
}
